<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:mvc="http://www.springframework.org/schema/mvc"
  xmlns:util="http://www.springframework.org/schema/util"
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

  <mvc:annotation-driven>
    <mvc:argument-resolvers>
      <bean
          class="org.springframework.data.web.PageableHandlerMethodArgumentResolver" >
        <property name="maxPageSize" value="100" />
        <property name="fallbackPageable">
          <bean class="org.springframework.data.domain.PageRequest">
            <constructor-arg index="0" value="0" />
            <constructor-arg index="1" value="10" />
          </bean>
        </property>
      </bean>
      <bean
        class="org.springframework.security.web.method.annotation.AuthenticationPrincipalArgumentResolver" />
    </mvc:argument-resolvers>
    <!-- workarround to CVE-2016-5007. -->
    <mvc:path-matching path-matcher="pathMatcher" />
  </mvc:annotation-driven>

  <context:property-placeholder location="classpath*:META-INF/spring/*.properties" />

  <context:component-scan base-package="jp.co.ntt.atrs.app" />

  <mvc:resources
    mapping="/resources/**"
    location="/resources/,classpath:META-INF/resources/"
    cache-period="#{60 * 60}" />

  <mvc:interceptors>
    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <mvc:exclude-mapping path="/resources/**" />
      <bean class="org.terasoluna.gfw.web.logging.TraceLoggingInterceptor" />
    </mvc:interceptor>

    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <bean class="org.terasoluna.gfw.web.codelist.CodeListInterceptor">
        <property name="codeListIdPattern" value="CL_.+" />
      </bean>
    </mvc:interceptor>

    <mvc:interceptor>
      <mvc:mapping path="/**" />
      <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenInterceptor">
        <constructor-arg value="20" />
      </bean>
    </mvc:interceptor>
  </mvc:interceptors>

  <mvc:view-resolvers>
    <mvc:bean-name />
    <bean class="org.thymeleaf.spring5.view.ThymeleafViewResolver">
      <property name="templateEngine" ref="templateEngine" />
      <property name="characterEncoding" value="UTF-8" />
    </bean>
  </mvc:view-resolvers>
  <bean id="templateResolver" class="org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver">
    <property name="prefix" value="/WEB-INF/views/" />
    <property name="suffix" value=".html" />
    <property name="templateMode" value="HTML" />
    <property name="characterEncoding" value="UTF-8" />
  </bean>
 
  <bean id="templateEngine" class="org.thymeleaf.spring5.SpringTemplateEngine">
    <property name="enableSpringELCompiler" value="true" />
    <property name="templateResolver" ref="templateResolver" />
    <property name="additionalDialects">
      <set>
        <bean class="org.thymeleaf.extras.springsecurity4.dialect.SpringSecurityDialect" />
      </set>
    </property>
  </bean>
  <bean name="requestDataValueProcessor" class="org.terasoluna.gfw.web.mvc.support.CompositeRequestDataValueProcessor">
    <constructor-arg>
      <util:list>
        <bean class="org.terasoluna.gfw.web.token.transaction.TransactionTokenRequestDataValueProcessor" />
        <bean class="org.springframework.security.web.servlet.support.csrf.CsrfRequestDataValueProcessor" />
      </util:list>
    </constructor-arg>
  </bean>

  <bean class="org.terasoluna.gfw.web.exception.SystemExceptionResolver">
    <property name="order" value="3" />
    <property name="exceptionMappings">
      <map>
        <entry key="InvalidTransactionTokenException" value="common/error/token-error" />
        <entry key="BadRequestException" value="common/error/badRequest-error" />
        <entry key="Exception" value="common/error/system-error" />
      </map>
    </property>
    <property name="statusCodes">
      <map>
        <entry key="common/error/token-error" value="409" />
        <entry key="common/error/badRequest-error" value="400" />
      </map>
    </property>
    <property name="excludedExceptions">
        <array>
            <value>org.springframework.web.util.NestedServletException</value>
        </array>
    </property>
    <property name="defaultStatusCode" value="500" />
    <property name="exceptionCodeResolver" ref="exceptionCodeResolver" />
    <property name="preventResponseCaching" value="true" />
  </bean>

  <bean id="handlerExceptionResolverLoggingInterceptor" class="org.terasoluna.gfw.web.exception.HandlerExceptionResolverLoggingInterceptor">
    <property name="exceptionLogger" ref="exceptionLogger" />
  </bean>

  <aop:config>
    <aop:advisor advice-ref="handlerExceptionResolverLoggingInterceptor"
      pointcut="execution(* org.springframework.web.servlet.HandlerExceptionResolver.resolveException(..))" />
  </aop:config>

  <!-- Setting PathMatcher. -->
  <bean id="pathMatcher" class="org.springframework.util.AntPathMatcher">
    <property name="trimTokens" value="false" />
  </bean>
</beans>
